(function() {var type_impls = {
"rshanghai":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A,)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A,)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A,)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A,)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J, K&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J, K) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J, K)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J, K, L&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J, K, L) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J, K, L)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L,+M)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L,+M)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J, K, L, M&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J, K, L, M) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J, K, L, M)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L,+M,+N)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L,+M,+N)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J, K, L, M, N&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J, K, L, M, N) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J, K, L, M, N)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L,+M,+N,+O)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L,+M,+N,+O)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L,+M,+N,+O,+P)%3E-for-Func\" class=\"impl\"><a href=\"#impl-Handler%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L,+M,+N,+O,+P)%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Func, Fut, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)</a>&gt; for Func<div class=\"where\">where\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;Fut as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a></h4></section><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Fut</h4></section><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    &amp;self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)</a>\n) -&gt; &lt;Func as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)</a>&gt;&gt;::Future</h4></section></div></details>","Handler<(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","rshanghai::utils::parser::TokenWithPos"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","rshanghai::utils::parser::TokenWithPos"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()