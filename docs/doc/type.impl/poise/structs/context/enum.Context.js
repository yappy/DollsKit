(function() {
    var type_impls = Object.fromEntries([["rshanghai",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CCache%3E-for-Context%3C'_,+U,+E%3E\" class=\"impl\"><a href=\"#impl-AsRef%3CCache%3E-for-Context%3C'_,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/cache/struct.Cache.html\" title=\"struct serenity::cache::Cache\">Cache</a>&gt; for Context&lt;'_, U, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/cache/struct.Cache.html\" title=\"struct serenity::cache::Cache\">Cache</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Cache>","rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CContext%3E-for-Context%3C'_,+U,+E%3E\" class=\"impl\"><a href=\"#impl-AsRef%3CContext%3E-for-Context%3C'_,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/client/context/struct.Context.html\" title=\"struct serenity::client::context::Context\">Context</a>&gt; for Context&lt;'_, U, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/client/context/struct.Context.html\" title=\"struct serenity::client::context::Context\">Context</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Context>","rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CHttp%3E-for-Context%3C'_,+U,+E%3E\" class=\"impl\"><a href=\"#impl-AsRef%3CHttp%3E-for-Context%3C'_,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt; for Context&lt;'_, U, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Http>","rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CShardMessenger%3E-for-Context%3C'_,+U,+E%3E\" class=\"impl\"><a href=\"#impl-AsRef%3CShardMessenger%3E-for-Context%3C'_,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/gateway/bridge/shard_messenger/struct.ShardMessenger.html\" title=\"struct serenity::gateway::bridge::shard_messenger::ShardMessenger\">ShardMessenger</a>&gt; for Context&lt;'_, U, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/gateway/bridge/shard_messenger/struct.ShardMessenger.html\" title=\"struct serenity::gateway::bridge::shard_messenger::ShardMessenger\">ShardMessenger</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<ShardMessenger>","rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CacheHttp-for-Context%3C'_,+U,+E%3E\" class=\"impl\"><a href=\"#impl-CacheHttp-for-Context%3C'_,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, E&gt; <a class=\"trait\" href=\"https://docs.rs/serenity/*/serenity/http/trait.CacheHttp.html\" title=\"trait serenity::http::CacheHttp\">CacheHttp</a> for Context&lt;'_, U, E&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.http\" class=\"method trait-impl\"><a href=\"#method.http\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serenity/*/serenity/http/trait.CacheHttp.html#tymethod.http\" class=\"fn\">http</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a></h4></section><section id=\"method.cache\" class=\"method trait-impl\"><a href=\"#method.cache\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serenity/*/serenity/http/trait.CacheHttp.html#method.cache\" class=\"fn\">cache</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/cache/struct.Cache.html\" title=\"struct serenity::cache::Cache\">Cache</a>&gt;&gt;</h4></section></div></details>","CacheHttp","rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Context%3C'_,+U,+E%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Context%3C'_,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Context&lt;'_, U, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Context&lt;'_, U, E&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Context%3C'a,+U,+E%3E\" class=\"impl\"><a href=\"#impl-Context%3C'a,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, U, E&gt; Context&lt;'a, U, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.defer\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">defer</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"https://docs.rs/serenity/*/serenity/error/enum.Error.html\" title=\"enum serenity::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Defer the response, giving the bot multiple minutes to respond without the user seeing an\n“interaction failed error”.</p>\n<p>Also sets the [<code>crate::ApplicationContext::has_sent_initial_response</code>] flag so subsequent\nresponses will be sent in the correct manner.</p>\n<p>No-op if this is an autocomplete context</p>\n<p>This will make the response public; to make it ephemeral, use [<code>Self::defer_ephemeral()</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.defer_ephemeral\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">defer_ephemeral</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"https://docs.rs/serenity/*/serenity/error/enum.Error.html\" title=\"enum serenity::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>See [<code>Self::defer()</code>]</p>\n<p>This will make the response ephemeral; to make it public, use [<code>Self::defer()</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.defer_or_broadcast\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">defer_or_broadcast</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/http/typing/struct.Typing.html\" title=\"struct serenity::http::typing::Typing\">Typing</a>&gt;, <a class=\"enum\" href=\"https://docs.rs/serenity/*/serenity/error/enum.Error.html\" title=\"enum serenity::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If this is an application command, [<code>Self::defer()</code>] is called</p>\n<p>If this is a prefix command, a typing broadcast is started until the return value is\ndropped.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.say\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">say</a>(\n    self,\n    text: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ReplyHandle&lt;'a&gt;, <a class=\"enum\" href=\"https://docs.rs/serenity/*/serenity/error/enum.Error.html\" title=\"enum serenity::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Shorthand of [<code>crate::say_reply</code>]</p>\n<p>Note: panics when called in an autocomplete context!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reply\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">reply</a>(\n    self,\n    text: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ReplyHandle&lt;'a&gt;, <a class=\"enum\" href=\"https://docs.rs/serenity/*/serenity/error/enum.Error.html\" title=\"enum serenity::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Like [<code>Self::say</code>], but formats the message as a reply to the user’s command\nmessage.</p>\n<p>Equivalent to <code>.send(|b| b.content(\"...\").reply(true))</code>.</p>\n<p>Only has an effect in prefix context, because slash command responses are always\nformatted as a reply.</p>\n<p>Note: panics when called in an autocomplete context!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">send</a>&lt;'att&gt;(\n    self,\n    builder: CreateReply,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ReplyHandle&lt;'a&gt;, <a class=\"enum\" href=\"https://docs.rs/serenity/*/serenity/error/enum.Error.html\" title=\"enum serenity::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Shorthand of [<code>crate::send_reply</code>]</p>\n<p>Note: panics when called in an autocomplete context!</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serenity_context\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">serenity_context</a>(self) -&gt; &amp;'a <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/client/context/struct.Context.html\" title=\"struct serenity::client::context::Context\">Context</a></h4></section></summary><div class=\"docblock\"><p>Return the stored <a href=\"https://docs.rs/serenity/*/serenity/client/context/struct.Context.html\" title=\"struct serenity::client::context::Context\"><code>serenity::Context</code></a> within the underlying context type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cooldown_context\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cooldown_context</a>(self) -&gt; CooldownContext</h4></section></summary><div class=\"docblock\"><p>Create a [<code>crate::CooldownContext</code>] based off the underlying context type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.discord\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">discord</a>(self) -&gt; &amp;'a <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/client/context/struct.Context.html\" title=\"struct serenity::client::context::Context\">Context</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: poise::Context can now be passed directly into most serenity functions. Otherwise, use <code>.serenity_context()</code> now</span></div></span></summary><div class=\"docblock\"><p>See [<code>Self::serenity_context</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.framework\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">framework</a>(self) -&gt; FrameworkContext&lt;'a, U, E&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a view into data stored by the framework, like configuration</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">data</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a U</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to your custom user data</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.channel_id\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">channel_id</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/id/struct.ChannelId.html\" title=\"struct serenity::model::id::ChannelId\">ChannelId</a></h4></section></summary><div class=\"docblock\"><p>Return the channel ID of this context</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_id\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">guild_id</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/id/struct.GuildId.html\" title=\"struct serenity::model::id::GuildId\">GuildId</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the guild ID of this context, if we are inside a guild</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_channel\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">guild_channel</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/channel/guild_channel/struct.GuildChannel.html\" title=\"struct serenity::model::channel::guild_channel::GuildChannel\">GuildChannel</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return the guild channel of this context, if we are inside a guild.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">guild</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/cache/struct.CacheRef.html\" title=\"struct serenity::cache::CacheRef\">CacheRef</a>&lt;'a, <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/id/struct.GuildId.html\" title=\"struct serenity::model::id::GuildId\">GuildId</a>, <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/guild/struct.Guild.html\" title=\"struct serenity::model::guild::Guild\">Guild</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Return the guild of this context, if we are inside a guild.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_guild\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">partial_guild</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/guild/partial_guild/struct.PartialGuild.html\" title=\"struct serenity::model::guild::partial_guild::PartialGuild\">PartialGuild</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return the partial guild of this context, if we are inside a guild.</p>\n<p>Attempts to find the guild in cache, if cache feature is enabled. Otherwise, falls back to\nan HTTP request</p>\n<p>Returns None if in DMs, or if the guild HTTP request fails</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.author_member\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">author_member</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/guild/member/struct.Member.html\" title=\"struct serenity::model::guild::member::Member\">Member</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the author of the invoking message or interaction, as a <a href=\"https://docs.rs/serenity/*/serenity/model/guild/member/struct.Member.html\" title=\"struct serenity::model::guild::member::Member\"><code>serenity::Member</code></a></p>\n<p>Returns a reference to the inner member object if in an [<code>crate::ApplicationContext</code>], otherwise\nclones the member out of the cache, or fetches from the discord API.</p>\n<p>Returns None if this command was invoked in DMs, or if the member cache lookup or HTTP\nrequest failed</p>\n<p>Warning: can clone the entire Member instance out of the cache</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.created_at\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">created_at</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/timestamp/struct.Timestamp.html\" title=\"struct serenity::model::timestamp::Timestamp\">Timestamp</a></h4></section></summary><div class=\"docblock\"><p>Return the datetime of the invoking message or interaction</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.author\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">author</a>(self) -&gt; &amp;'a <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/user/struct.User.html\" title=\"struct serenity::model::user::User\">User</a></h4></section></summary><div class=\"docblock\"><p>Get the author of the command message or application command.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.id\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">id</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Return a ID that uniquely identifies this command invocation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent_commands\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">parent_commands</a>(self) -&gt; &amp;'a [&amp;'a Command&lt;U, E&gt;]</h4></section></summary><div class=\"docblock\"><p>If the invoked command was a subcommand, these are the parent commands, ordered top-level\ndownwards.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.command\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">command</a>(self) -&gt; &amp;'a Command&lt;U, E&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the command.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prefix\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">prefix</a>(self) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Returns the prefix this command was invoked with, or a slash (<code>/</code>), if this is an\napplication command.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.invoked_command_name\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">invoked_command_name</a>(self) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Returns the command name that this command was invoked with</p>\n<p>Mainly useful in prefix context, for example to check whether a command alias was used.</p>\n<p>In slash contexts, the given command name will always be returned verbatim, since there are\nno slash command aliases and the user has no control over spelling</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rerun\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">rerun</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, E&gt;</h4></section></summary><div class=\"docblock\"><p>Re-runs this entire command invocation</p>\n<p>Permission checks are omitted; the command code is directly executed as a function. The\nresult is returned by this function</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.invocation_string\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">invocation_string</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Returns the string with which this command was invoked.</p>\n<p>For example <code>\"/slash_command subcommand arg1:value1 arg2:value2\"</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_invocation_data\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">set_invocation_data</a>&lt;T&gt;(self, data: T)<div class=\"where\">where\n    T: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h4></section></summary><div class=\"docblock\"><p>Stores the given value as the data for this command invocation</p>\n<p>This data is carried across the <code>pre_command</code> hook, checks, main command execution, and\n<code>post_command</code>. It may be useful to cache data or pass information to later phases of command\nexecution.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.invocation_data\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">invocation_data</a>&lt;T&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> + 'a&gt;<div class=\"where\">where\n    T: 'static,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to get the invocation data with the requested type</p>\n<p>If the stored invocation data has a different type than requested, None is returned</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.locale\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">locale</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If available, returns the locale (selected language) of the invoking user</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reply_builder\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reply_builder</a>(self, builder: CreateReply) -&gt; CreateReply</h4></section></summary><div class=\"docblock\"><p>Builds a [<code>crate::CreateReply</code>] by combining the builder closure with the defaults that were\npre-configured in poise.</p>\n<p>This is primarily an internal function and only exposed for people who want to manually\nconvert [<code>crate::CreateReply</code>] instances into Discord requests.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cache\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cache</a>(self) -&gt; &amp;'a <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/cache/struct.Cache.html\" title=\"struct serenity::cache::Cache\">Cache</a></h4></section></summary><div class=\"docblock\"><p>Returns serenity’s cache which stores various useful data received from the gateway</p>\n<p>Shorthand for <a href=\"https://docs.rs/serenity/*/serenity/client/context/struct.Context.html#structfield.cache\" title=\"field serenity::client::context::Context::cache\"><code>.serenity_context().cache</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.http\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">http</a>(self) -&gt; &amp;'a <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a></h4></section></summary><div class=\"docblock\"><p>Returns serenity’s raw Discord API client to make raw API requests, if needed.</p>\n<p>Shorthand for <a href=\"https://docs.rs/serenity/*/serenity/client/context/struct.Context.html#structfield.http\" title=\"field serenity::client::context::Context::http\"><code>.serenity_context().http</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ping\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">ping</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a></h4></section></summary><div class=\"docblock\"><p>Returns the current gateway heartbeat latency (<a href=\"https://docs.rs/serenity/*/serenity/gateway/shard/struct.Shard.html#method.latency\" title=\"method serenity::gateway::shard::Shard::latency\"><code>::serenity::gateway::Shard::latency()</code></a>).</p>\n<p>If the shard has just connected, this value is zero.</p>\n</div></details></div></details>",0,"rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Context%3C'a,+U,+E%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Context%3C'a,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Context&lt;'a, U, E&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.84.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CApplicationContext%3C'a,+U,+E%3E%3E-for-Context%3C'a,+U,+E%3E\" class=\"impl\"><a href=\"#impl-From%3CApplicationContext%3C'a,+U,+E%3E%3E-for-Context%3C'a,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ApplicationContext&lt;'a, U, E&gt;&gt; for Context&lt;'a, U, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: ApplicationContext&lt;'a, U, E&gt;) -&gt; Context&lt;'a, U, E&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ApplicationContext<'a, U, E>>","rshanghai::sysmod::discord::PoiseContext"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPrefixContext%3C'a,+U,+E%3E%3E-for-Context%3C'a,+U,+E%3E\" class=\"impl\"><a href=\"#impl-From%3CPrefixContext%3C'a,+U,+E%3E%3E-for-Context%3C'a,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PrefixContext&lt;'a, U, E&gt;&gt; for Context&lt;'a, U, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: PrefixContext&lt;'a, U, E&gt;) -&gt; Context&lt;'a, U, E&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PrefixContext<'a, U, E>>","rshanghai::sysmod::discord::PoiseContext"],["<section id=\"impl-Copy-for-Context%3C'_,+U,+E%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Context%3C'_,+U,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Context&lt;'_, U, E&gt;</h3></section>","Copy","rshanghai::sysmod::discord::PoiseContext"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[36904]}